// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repo_EF;

#nullable disable

namespace Repo_EF.Migrations
{
    [DbContext(typeof(ApplicationDbcontext))]
    partial class ApplicationDbcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Repo_Core.Models.Register", b =>
                {
                    b.Property<int>("Id_Reg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Reg"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id_Reg");

                    b.ToTable("Registers");
                });

            modelBuilder.Entity("SecondEgSA.Model1.CoM_Param", b =>
                {
                    b.Property<int>("sub_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("Commandsub_ID")
                        .HasColumnType("int");

                    b.Property<int>("com_id")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("param_ID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("param_TB_typeparam_ID")
                        .HasColumnType("int");

                    b.Property<int?>("param_type")
                        .HasColumnType("int");

                    b.HasKey("sub_Id");

                    b.HasIndex("Commandsub_ID");

                    b.HasIndex("param_TB_typeparam_ID");

                    b.ToTable("CoM_Param");
                });

            modelBuilder.Entity("SecondEgSA.Model1.Command", b =>
                {
                    b.Property<int>("sub_ID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("com_description")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("com_id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<string>("sensor_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("sub_ID");

                    b.ToTable("Command");
                });

            modelBuilder.Entity("SecondEgSA.Model1.param_TB_type", b =>
                {
                    b.Property<int>("param_ID")
                        .HasColumnType("int");

                    b.Property<string>("param_type")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("param_ID");

                    b.ToTable("param_TB_type");
                });

            modelBuilder.Entity("SecondEgSA.Model1.Param_Value", b =>
                {
                    b.Property<int>("com_id")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("parm_ID")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("device")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<int>("sub_ID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.HasKey("com_id", "parm_ID");

                    b.HasIndex("parm_ID", "com_id", "sub_ID");

                    b.ToTable("Param_Value");
                });

            modelBuilder.Entity("SecondEgSA.Model1.Sat_Station", b =>
                {
                    b.Property<int>("Sat_Sta_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Sat_ID")
                        .HasColumnType("int");

                    b.Property<int>("SatelliteSat_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Station_ID")
                        .HasColumnType("int");

                    b.HasKey("Sat_Sta_ID");

                    b.HasIndex("SatelliteSat_ID");

                    b.HasIndex("Station_ID");

                    b.ToTable("Sat_Station");
                });

            modelBuilder.Entity("SecondEgSA.Model1.Satellite", b =>
                {
                    b.Property<int>("Sat_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Launch_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Mass")
                        .HasColumnType("int");

                    b.Property<int?>("Nat_ID")
                        .HasColumnType("int");

                    b.Property<string>("Orbit_Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Sat_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<short?>("Sat_type")
                        .HasColumnType("smallint");

                    b.Property<int>("StationNat_ID")
                        .HasColumnType("int");

                    b.HasKey("Sat_ID");

                    b.HasIndex("StationNat_ID");

                    b.ToTable("Satellite");
                });

            modelBuilder.Entity("SecondEgSA.Model1.Station", b =>
                {
                    b.Property<int>("Nat_ID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Latitude")
                        .HasPrecision(18)
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Longitude")
                        .HasPrecision(18)
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Station_Type")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Station_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Nat_ID");

                    b.ToTable("Station");
                });

            modelBuilder.Entity("SecondEgSA.Model1.Subsystem", b =>
                {
                    b.Property<int>("Sub_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Sat_ID")
                        .HasColumnType("int");

                    b.Property<int>("SatelliteSat_ID")
                        .HasColumnType("int");

                    b.Property<string>("Sub_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Sub_type")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Sub_ID");

                    b.HasIndex("SatelliteSat_ID");

                    b.ToTable("Subsystem");
                });

            modelBuilder.Entity("SecondEgSA.Model1.CoM_Param", b =>
                {
                    b.HasOne("SecondEgSA.Model1.Command", "Command")
                        .WithMany("CoM_Param")
                        .HasForeignKey("Commandsub_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecondEgSA.Model1.param_TB_type", "param_TB_type")
                        .WithMany("CoM_Param")
                        .HasForeignKey("param_TB_typeparam_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Command");

                    b.Navigation("param_TB_type");
                });

            modelBuilder.Entity("SecondEgSA.Model1.Param_Value", b =>
                {
                    b.HasOne("SecondEgSA.Model1.CoM_Param", "CoM_Param")
                        .WithMany("Param_Value")
                        .HasForeignKey("parm_ID", "com_id", "sub_ID")
                        .HasPrincipalKey("param_ID", "com_id", "sub_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoM_Param");
                });

            modelBuilder.Entity("SecondEgSA.Model1.Sat_Station", b =>
                {
                    b.HasOne("SecondEgSA.Model1.Satellite", "Satellite")
                        .WithMany("Sat_Station")
                        .HasForeignKey("SatelliteSat_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecondEgSA.Model1.Station", "Station")
                        .WithMany("Sat_Station")
                        .HasForeignKey("Station_ID");

                    b.Navigation("Satellite");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("SecondEgSA.Model1.Satellite", b =>
                {
                    b.HasOne("SecondEgSA.Model1.Station", "Station")
                        .WithMany("Satellites")
                        .HasForeignKey("StationNat_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("SecondEgSA.Model1.Subsystem", b =>
                {
                    b.HasOne("SecondEgSA.Model1.Satellite", "Satellite")
                        .WithMany("Subsystems")
                        .HasForeignKey("SatelliteSat_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Satellite");
                });

            modelBuilder.Entity("SecondEgSA.Model1.CoM_Param", b =>
                {
                    b.Navigation("Param_Value");
                });

            modelBuilder.Entity("SecondEgSA.Model1.Command", b =>
                {
                    b.Navigation("CoM_Param");
                });

            modelBuilder.Entity("SecondEgSA.Model1.param_TB_type", b =>
                {
                    b.Navigation("CoM_Param");
                });

            modelBuilder.Entity("SecondEgSA.Model1.Satellite", b =>
                {
                    b.Navigation("Sat_Station");

                    b.Navigation("Subsystems");
                });

            modelBuilder.Entity("SecondEgSA.Model1.Station", b =>
                {
                    b.Navigation("Sat_Station");

                    b.Navigation("Satellites");
                });
#pragma warning restore 612, 618
        }
    }
}
